// <auto-generated />
using System;
using FlightAggregatorAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightAggregatorAPI.Migrations
{
    [DbContext(typeof(FlightContext))]
    [Migration("20240728130333_AddedNewEntity")]
    partial class AddedNewEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassengerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassengerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("FlightAggregatorAPI.Models.FlightInfo", b =>
                {
                    b.Property<string>("FlightNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Airline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stops")
                        .HasColumnType("int");

                    b.Property<int>("TicketsAvailable")
                        .HasColumnType("int");

                    b.HasKey("FlightNumber");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            FlightNumber = "MF123",
                            Airline = "MockAirline1",
                            ArrivalTime = new DateTime(2024, 7, 29, 0, 3, 33, 478, DateTimeKind.Local).AddTicks(369),
                            DepartureTime = new DateTime(2024, 7, 28, 21, 3, 33, 478, DateTimeKind.Local).AddTicks(347),
                            Price = 100m,
                            Stops = 0,
                            TicketsAvailable = 30
                        },
                        new
                        {
                            FlightNumber = "MF100",
                            Airline = "AirBus",
                            ArrivalTime = new DateTime(2024, 7, 29, 6, 3, 33, 478, DateTimeKind.Local).AddTicks(376),
                            DepartureTime = new DateTime(2024, 7, 29, 1, 3, 33, 478, DateTimeKind.Local).AddTicks(375),
                            Price = 300m,
                            Stops = 1,
                            TicketsAvailable = 50
                        },
                        new
                        {
                            FlightNumber = "FF100",
                            Airline = "Boing777",
                            ArrivalTime = new DateTime(2024, 7, 28, 23, 3, 33, 478, DateTimeKind.Local).AddTicks(378),
                            DepartureTime = new DateTime(2024, 7, 28, 19, 3, 33, 478, DateTimeKind.Local).AddTicks(377),
                            Price = 150m,
                            Stops = 0,
                            TicketsAvailable = 70
                        },
                        new
                        {
                            FlightNumber = "MD101",
                            Airline = "FlightPop",
                            ArrivalTime = new DateTime(2024, 7, 29, 11, 3, 33, 478, DateTimeKind.Local).AddTicks(380),
                            DepartureTime = new DateTime(2024, 7, 28, 23, 3, 33, 478, DateTimeKind.Local).AddTicks(380),
                            Price = 500m,
                            Stops = 3,
                            TicketsAvailable = 90
                        });
                });

            modelBuilder.Entity("FlightAggregatorAPI.Models.Ticket", b =>
                {
                    b.Property<string>("TicketNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TicketNumber");

                    b.ToTable("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
